@page "/ClienteMT"
@using PryFront_Marathon.Models
@inject HttpClient Http

<PageTitle>Cliente</PageTitle>

@{
    var registerUrl = $"ClienteMT/RegistroCliente";
}

<h3>Gestión Cliente </h3>
<div class="p-2">
    <NavLink class="nav-link" href=@registerUrl>
        <button class="btn btn-primary">Registrar Cliente</button>
    </NavLink>

</div>

@if (lista_Cliente == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th scope="col">Dni</th>
                <th scope="col" class="text-center">Nombres y Apellidos</th>
                <th scope="col">Correo</th>
                <th scope="col">Fec_Nac</th>
                <th scope="col">Puntos_Acum</th>
                <th scope="col">Usuario</th>
                <th scope="col">Estado</th>
                <th scope="col"><p style="padding-left:50px; margin-bottom:0px">Acciones</p></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var ls_cli in lista_Cliente)
            {

                <tr>
                    <th scope="row">@ls_cli.Dni_Cliente</th>
                    <td class="text-center">@ls_cli.Nombres @ls_cli.Apellidos</td>
                    <td>@ls_cli.Correo</td>
                    <td>@ls_cli.Fecha_Nac</td>
                    <td>@ls_cli.Puntos_Acum</td>
                    <td>@ls_cli.User_Cli</td>
                    @if (ls_cli.Estado == 1)
                    {
                        <td>Activo</td>
                    }
                    else
                    {
                        <td>Inactivo</td>
                    }
                    @{
                        string dni = ls_cli.Dni_Cliente;
                        var updateUrl = $"ClienteMT/Update/{dni}"; // Construcción de la URL
                    }
                    <td class="text-center">
                        <div class="row">
                            <div class="col-md-4">
                                <NavLink class="nav-link" href=@updateUrl>
                                    <button class="btn btn-primary">Editar</button>
                                </NavLink>
                            </div>
                            <div class="col-md-4">
                                <button class="btn btn-danger" @onclick="()=>EliminarCliente(dni)">Eliminar</button>
                            </div>
                        </div>


                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    Cliente cliente = new Cliente();
    public static List<Cliente> lista_Cliente = new List<Cliente>();
    string res = "En proceso...";


    async Task ListadodeCliente()
    {
        var resp = await Http.GetFromJsonAsync<List<Cliente>>("https://localhost:44347/GetListaCliente");
        lista_Cliente = resp;
    }

    async Task EliminarCliente(string dni)
    {
        var resJson = await Http.PostAsync("https://localhost:44347/Delete_Cliente/" + dni, null);
        string res = resJson.StatusCode.ToString();
        await ListadodeCliente();
    }


    protected override async Task OnInitializedAsync()
    {
        //llamamos al metodo para cargar la lista de perfiles ni bien se inicie la pagina
        await ListadodeCliente();
    }





}
