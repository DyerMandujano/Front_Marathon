@page "/ProductoMT"
@using PryFront_Marathon.Models
@inject HttpClient Http

<PageTitle>Producto</PageTitle>

@{
    var registerUrl = $"ProductoMT/RegistroProducto";
}

<h3>Gestión Producto </h3>
<div class ="p-2">
    <NavLink class ="nav-link" href=@registerUrl>
        <button class="btn btn-primary">Registrar Producto</button>
    </NavLink>
</div>

@if (lista_Producto == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Nombre de Producto</th>
                <th>Precio</th>
                <th>Stock</th>
                <th>Imagen</th>
                <th>Estado</th>
                <th class="m-auto">Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var ls_prod_perso in lista_producto_perso)
            {

                <tr>
                    <td>@ls_prod_perso.Cod_Prod</td>
                    <td>@ls_prod_perso.Nom_Prod</td>
                    <td>@ls_prod_perso.Precio</td>
                    <td>@ls_prod_perso.Stock</td>
                    <td><img src=@ls_prod_perso.Image_front style="width:70px; height:70px;" alt="Imagenes Prod"></td>
                    <td>@ls_prod_perso.Estado</td>
                    @{
                        int id = ls_prod_perso.Cod_Prod;
                        var updateUrl = $"ProductoMT/Update/{id}"; // Construcción de la URL
                    }
                    <td>
                        <div class="row">
                            <div class="col-md-4">
                                <NavLink class="nav-link" href=@updateUrl>
                                    <button class="btn btn-primary">Editar</button>
                                </NavLink>
                            </div>
                            <div class="col-md-4">
                                <button class="btn btn-danger" @onclick="()=>EliminarProducto(id)">Eliminar</button>
                            </div>
                        </div>
                        
                        
                    </td>
                </tr>
            }
        </tbody>
    </table>           
}


@code {
    Producto producto = new Producto();
    Producto_Perso producto_Perso = new Producto_Perso();
   // string img_p = "img/foto1.jpg";

    public static List<Producto> lista_Producto= new List<Producto>();
    public static List<Producto_Perso> lista_producto_perso = new List<Producto_Perso>();
    string res = "En proceso...";


    async Task ListadodeProducto()
    {
        var resp = await Http.GetFromJsonAsync<List<Producto_Perso>>("https://localhost:44347/GetListaProductoPerso");
        lista_producto_perso = resp;
    }

    async Task EliminarProducto(int id)
    {
        var resJson = await Http.PostAsync("https://localhost:44347/Delete_Producto/" + id, null);
        string res = resJson.StatusCode.ToString();
        await ListadodeProducto();
    }


    protected override async Task OnInitializedAsync()
    {
        //llamamos al metodo para cargar la lista de perfiles ni bien se inicie la pagina
        await ListadodeProducto();
    }
}
