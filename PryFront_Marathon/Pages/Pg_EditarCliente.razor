@page "/ClienteMT/Update/{dni}"
@using PryFront_Marathon.Models
@inject HttpClient Http

<h3>Actualizar Cliente por DNI @dni</h3>

<div class="container">
    <div class="row mb-4">
        <div class="col-md-4">
            <label> DNI </label>
            <input type="text" class="form-control" @bind-value="cliente.Dni_Cliente" disabled />
        </div>
        <div class="col-md-4">
            <label> Nombres </label>
            <input type="text" class="form-control" @bind-value="cliente.Nombres" />
        </div>
        <div class="col-md-4">
            <label> Apellidos </label>
            <input type="text" class="form-control" @bind-value="cliente.Apellidos" />
        </div>
    </div>
    <div class="row mb-4">
        <div class="col-md-4">
            <label> Fecha Nacimiento </label>
            <input type="date" min="1924-01-01" class="form-control" @bind-value="cliente.Fecha_Nac" />
        </div>
        <div class="col-md-4">
            <label> Correo </label>
            <input type="email" class="form-control" @bind-value="cliente.Correo" />
        </div>
        <div class="col-md-4">
            <label> Género </label>
            <select class="form-select" @bind="cliente.Genero">
                <option selected>--Selecciona--</option>
                <option value="Masculino">Masculino</option>
                <option value="Femenino">Femenino</option>
            </select>
        </div>
    </div>
    
            <label> Usuario </label>
    <input type="text" class="form-control" @bind-value="cliente.User_Cli" />
        </div>
        <div class="col-md-4">
            <label> Contraseña </label>
    <input type="password" class="form-control" @bind-value="cliente.Contra_Cli" />
        </div>
        <div class="col-md-4">
            <label> Estado </label>
    <select class="form-select" @bind="cliente.Estado">
                <option value=0>Inactivo</option>
                <option value=1>Activo</option>
            </select>
        </div>
  

    <div class="row mb-4 ">
        <div class="col-md-6">
            <button class="btn btn-warning w-100" @onclick="()=>UpdateCliente(dni)">Actualizar</button>
        </div>
        <div class="col-md-6">
            <NavLink class="nav-link" href="ClienteMT">
                <button class="btn btn-primary w-100">Regresar</button>
            </NavLink>
        </div>
    </div>

    @if (res != "")
    {
        <div class="row justify-content-center">
            <div class="col-md-6 text-white text-center p-3" style="background-color: #ef7012;">
                <strong>@res</strong>
            </div>
        </div>
    }


@code {

    [Parameter]
    public string dni { get; set; }

    Cliente cliente = new Cliente();
    string res = "";

    //Listados de Cliente y Cod_mem
    public static List<Cod_Membresia> lista_cod_mem = new List<Cod_Membresia>();
    public static List<Cliente> lista_cliente = new List<Cliente>();

    async Task BuscarPersonal_DNI(string dni)
    {
        var resp = await Http.GetFromJsonAsync<Cliente>("https://localhost:44347/GetClienteID/" + dni);
        cliente = resp;
    }

    async Task UpdateCliente(string dni)
    {
        var resJson = await Http.PostAsJsonAsync("https://localhost:44347/UpdateCliente/" + dni, cliente);
        res = await resJson.Content.ReadAsStringAsync();
        // Forzar que la interfaz se actualice
        StateHasChanged();

        //Le colocamos delay para q se pueda observar el mensaje
        await Task.Delay(2000);
        //Limpiamos el mensaje
        res = "";
    }

    //Metodo para cargar la lista de perfiles
    async Task ListadodeClientes()
    {
        var resp = await Http.GetFromJsonAsync<List<Cliente>>("https://localhost:44347/GetListaPerfil_Cliente");
        lista_cliente = resp;
    }

    protected override async Task OnInitializedAsync()
    {
        //llamamos al metodo para cargar la lista de perfiles ni bien se inicie la pagina
        await BuscarPersonal_DNI(dni);
        await ListadodeClientes();
    }
}